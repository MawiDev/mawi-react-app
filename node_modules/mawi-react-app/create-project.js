#!/usr/bin/env node

const path = require('path');
const fs = require('fs-extra');
const readline = require('readline');
const spawn = require('cross-spawn');

const templateDir = path.join(__dirname, 'template');
const projectDir = process.cwd();

const devDependencies = [
  '@babel/core',
  '@babel/plugin-syntax-jsx',
  '@babel/preset-env',
  '@babel/preset-react',
  'autoprefixer',
  'babel-loader',
  'clean-webpack-plugin',
  'css-loader',
  'css-minimizer-webpack-plugin',
  'html-webpack-plugin',
  'mini-css-extract-plugin',
  'postcss',
  'postcss-loader',
  'style-loader',
  'tailwindcss',
  'terser-webpack-plugin',
  'webpack',
  'webpack-cli',
  'webpack-dev-server',
];

async function createProject() {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question("Enter project name: ", async function(projectName) {
    const projectPath = path.join(projectDir, projectName);

    // Create project directory
    await fs.mkdir(projectPath);

    // Copy template files to project directory
    await fs.copy(templateDir, projectPath);

    console.log(`Creating new project in ${projectName}`);
    console.log(`Project successfully created!`);
    console.log(`To get started, run the following commands:`);
    console.log(`cd ${projectName}`);
    console.log(`npm start`);

    // Update package.json with project name
    const packageJsonPath = path.join(projectPath, 'package.json');
    const packageJson = await fs.readJson(packageJsonPath);
    packageJson.name = projectName;
    await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });

    // Install dev dependencies
    spawn.sync('npm', ['install', '--save-dev', ...devDependencies], { cwd: projectPath, stdio: 'inherit' });
  });

  rl.close();
}

module.exports = createProject;
